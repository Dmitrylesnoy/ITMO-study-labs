/*
 * This source file was generated by the Gradle 'init' task
 */
package web;

import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.time.LocalDateTime;
import java.util.InvalidPropertiesFormatException;
import com.fastcgi.*;

public class App {
    public static void main(String[] args) throws IOException, InterruptedException {
        // Logger.getLogger("java app").info("Hello world!");

        var fcgiInterface = new FCGIInterface();
        while (fcgiInterface.FCGIaccept() >= 0) {
            String method = FCGIInterface.request.params.getProperty("REQUEST_METHOD");

            if (method.equals("GET")) {
                long time1 = System.nanoTime();
                Thread.sleep(1000);
                var queryString = FCGIInterface.request.params.getProperty("QUERY_STRING");
                if (queryString != null) {
                    try {
                        Params params = Params.fromQuery(queryString);
                        String hit = "No";
                        if (hitCalc(params.x(), params.y(), params.r()))
                            hit = "Yes";

                        String execTime = String.format("%.3f", (System.nanoTime() - time1) / 1_000_000.0);
                        System.out.println(makeResponse(Integer.toString(params.x()), Float.toString(params.y()),
                                Integer.toString(params.r()), hit, execTime));

                    } catch (InvalidPropertiesFormatException e) {
                        String json = """
                                {"error":"%s","time":"%s"}
                                """.formatted(e.getMessage(), LocalDateTime.now().toString());
                        System.out.println("""
                                HTTP/1.1 400 Bad Request
                                Content-Type: application/json
                                Content-Length: %d

                                %s
                                """.formatted(json.getBytes(StandardCharsets.UTF_8).length, json));
                    }
                } else {
                    System.out.println("getMainPage()");
                }
            }
        }

    }

    private static boolean hitCalc(int x_, float y, int r_) {
        float x = (float) x_;
        float r = (float) r_;
        if (x == 0 && y == 0)
            return true;
        if (x <= 0 && y >= 0) { // 2nd part
            if ((x * x + y * y) <= r * r) // circle
                return true;
        }
        if (x >= 0 && y >= 0) { // 1st part
            if (y <= (-0.5 * x + r / 2)) // triangle
                return true;
            // y < -x/2 +r/2
        }
        if (x <= 0 && y <= 0) { // 3rd part
            if (x >= -r && y >= (-0.5 * r)) // rectangle
                return true;
        }

        return false;
    }

    private static String makeResponse(String x, String y, String r, String hit, String execTime) {
        final String json = """
                {"x":"%s","y":"%s","r":"%s","hit":"%s","execTime":"%s","time":"%s"}
                """.formatted(x, y, r, hit, execTime, LocalDateTime.now());
        return """
                HTTP/1.1 200 OK
                Content-Type: application/json
                Content-Length: %d

                %s
                """.formatted(json.getBytes(StandardCharsets.UTF_8).length + 2, json);
    }

}
